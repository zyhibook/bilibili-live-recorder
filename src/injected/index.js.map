{"version":3,"file":"index.js","sources":["../../node_modules/@babel/runtime/helpers/classCallCheck.js","../constant.js","dev/index.js"],"sourcesContent":["function _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nmodule.exports = _classCallCheck;","export const BILIBILI = 'https://live.bilibili.com';\nexport const GITHUB = 'https://github.com/zhw2590582/bilibili-live-recorder';\nexport const WEBSTORE = 'https://chrome.google.com/webstore/category/extensions';\n\nexport const BEFORE_RECORD = 'before_record';\nexport const START_RECORD = 'start_record';\nexport const RECORDING = 'recording';\nexport const STOP_RECORD = 'stop_record';\nexport const AFTER_RECORD = 'after_record';\n\nexport const BEFORE_DOWNLOAD = 'before_download';\nexport const START_DOWNLOAD = 'start_download';\nexport const DOWNLOADING = 'downloading';\nexport const AFTER_DOWNLOAD = 'after_download';\n\nexport const MP4_BUFFER = 'mp4_buffer';\nexport const FLV_BUFFER = 'flv_buffer';\n","import './index.scss';\nimport { MP4_BUFFER, FLV_BUFFER } from '../../constant';\n\nclass Injected {\n    constructor() {\n        const { appendBuffer } = SourceBuffer.prototype;\n        SourceBuffer.prototype.appendBuffer = function(buf) {\n            window.postMessage({\n                type: MP4_BUFFER,\n                data: new Uint8Array(buf.slice()),\n            });\n            return appendBuffer.call(this, buf);\n        };\n\n        const { read } = ReadableStreamDefaultReader.prototype;\n        ReadableStreamDefaultReader.prototype.read = function() {\n            const promiseResult = read.call(this);\n            promiseResult.then(({ done, value }) => {\n                if (done) return;\n                window.postMessage({\n                    type: FLV_BUFFER,\n                    data: value.slice(),\n                });\n            });\n            return promiseResult;\n        };\n    }\n}\n\nexport default new Injected();\n"],"names":["MP4_BUFFER","FLV_BUFFER","Injected","appendBuffer","SourceBuffer","prototype","buf","window","postMessage","type","data","Uint8Array","slice","call","read","ReadableStreamDefaultReader","promiseResult","then","done","value"],"mappings":";;;;;;EAAA,SAAS,eAAe,CAAC,QAAQ,EAAE,WAAW,EAAE;IAC9C,IAAI,EAAE,QAAQ,YAAY,WAAW,CAAC,EAAE;MACtC,MAAM,IAAI,SAAS,CAAC,mCAAmC,CAAC,CAAC;KAC1D;GACF;;EAED,kBAAc,GAAG,eAAe;;ECSzB,IAAMA,UAAU,GAAG,YAAnB;AACP,EAAO,IAAMC,UAAU,GAAG,YAAnB;;MCbDC,WACF,oBAAc;EAAA;;EAAA,MACFC,YADE,GACeC,YAAY,CAACC,SAD5B,CACFF,YADE;;EAEVC,EAAAA,YAAY,CAACC,SAAb,CAAuBF,YAAvB,GAAsC,UAASG,GAAT,EAAc;EAChDC,IAAAA,MAAM,CAACC,WAAP,CAAmB;EACfC,MAAAA,IAAI,EAAET,UADS;EAEfU,MAAAA,IAAI,EAAE,IAAIC,UAAJ,CAAeL,GAAG,CAACM,KAAJ,EAAf;EAFS,KAAnB;EAIA,WAAOT,YAAY,CAACU,IAAb,CAAkB,IAAlB,EAAwBP,GAAxB,CAAP;EACH,GAND;;EAFU,MAUFQ,IAVE,GAUOC,2BAA2B,CAACV,SAVnC,CAUFS,IAVE;;EAWVC,EAAAA,2BAA2B,CAACV,SAA5B,CAAsCS,IAAtC,GAA6C,YAAW;EACpD,QAAME,aAAa,GAAGF,IAAI,CAACD,IAAL,CAAU,IAAV,CAAtB;EACAG,IAAAA,aAAa,CAACC,IAAd,CAAmB,gBAAqB;EAAA,UAAlBC,IAAkB,QAAlBA,IAAkB;EAAA,UAAZC,KAAY,QAAZA,KAAY;EACpC,UAAID,IAAJ,EAAU;EACVX,MAAAA,MAAM,CAACC,WAAP,CAAmB;EACfC,QAAAA,IAAI,EAAER,UADS;EAEfS,QAAAA,IAAI,EAAES,KAAK,CAACP,KAAN;EAFS,OAAnB;EAIH,KAND;EAOA,WAAOI,aAAP;EACH,GAVD;EAWH;;AAGL,cAAe,IAAId,QAAJ,EAAf;;;;;;;;"}